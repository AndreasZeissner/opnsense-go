// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package ipsec

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var KeyPairOpts = api.ReqOpts{
	AddEndpoint:         "/api/ipsec/key_pairs/add",
	GetEndpoint:         "/api/ipsec/key_pairs/get",
	UpdateEndpoint:      "/api/ipsec/key_pairs/setItem",
	DeleteEndpoint:      "/api/ipsec/key_pairs/del",
	ReconfigureEndpoint: ipsecReconfigureEndpoint,
	Monad:               "KeyPair",
}

// Data structs

type KeyPair struct {
	UUID       string          `json:"uuid"`
	Name       string          `json:"name"`
	Type       api.SelectedMap `json:"type"`
	Size       int             `json:"size"`
	PublicKey  string          `json:"public_key"`
	PrivateKey string          `json:"private_key"`
}

// CRUD operations

func (c *Controller) AddKeyPair(ctx context.Context, resource *KeyPair) (string, error) {
	return api.Add(c.Client(), ctx, KeyPairOpts, resource)
}

func (c *Controller) GetKeyPair(ctx context.Context, id string) (*KeyPair, error) {
	return api.GetFilter(c.Client(), ctx, KeyPairOpts, &KeyPair{}, id)
}

func (c *Controller) GetKeyPairAll(ctx context.Context) ([]KeyPair, error) {
	return api.GetAll(c.Client(), ctx, KeyPairOpts, []KeyPair{})
}

func (c *Controller) UpdateKeyPair(ctx context.Context, id string, resource *KeyPair) error {
	return api.Update(c.Client(), ctx, KeyPairOpts, resource, id)
}

func (c *Controller) DeleteKeyPair(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, KeyPairOpts, id)
}
