// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package ipsec

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var PoolOpts = api.ReqOpts{
	AddEndpoint:         "/api/ipsec/pools/add",
	GetEndpoint:         "/api/ipsec/pools/get",
	UpdateEndpoint:      "/api/ipsec/pools/set",
	DeleteEndpoint:      "/api/ipsec/pools/del",
	ReconfigureEndpoint: ipsecReconfigureEndpoint,
	Monad:               "Pool",
}

// Data structs

type Pool struct {
	UUID        string `json:"uuid"`
	Name        string `json:"name"`
	Network     string `json:"network"`
	Mask        string `json:"mask"`
	Description string `json:"description"`
	Enabled     bool   `json:"enabled"`
}

// CRUD operations

func (c *Controller) AddPool(ctx context.Context, resource *Pool) (string, error) {
	return api.Add(c.Client(), ctx, PoolOpts, resource)
}

func (c *Controller) GetPool(ctx context.Context, id string) (*Pool, error) {
	return api.GetFilter(c.Client(), ctx, PoolOpts, &Pool{}, id)
}

func (c *Controller) GetPoolAll(ctx context.Context) ([]Pool, error) {
	return api.GetAll(c.Client(), ctx, PoolOpts, []Pool{})
}

func (c *Controller) UpdatePool(ctx context.Context, id string, resource *Pool) error {
	return api.Update(c.Client(), ctx, PoolOpts, resource, id)
}

func (c *Controller) DeletePool(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, PoolOpts, id)
}
