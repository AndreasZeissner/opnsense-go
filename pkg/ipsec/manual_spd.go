// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package ipsec

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var ManualSPDOpts = api.ReqOpts{
	AddEndpoint:         "/api/ipsec/manual_spd/add",
	GetEndpoint:         "/api/ipsec/manual_spd/get",
	UpdateEndpoint:      "/api/ipsec/manual_spd/set",
	DeleteEndpoint:      "/api/ipsec/manual_spd/del",
	ReconfigureEndpoint: ipsecReconfigureEndpoint,
	Monad:               "ManualSPD",
}

// Data structs

type ManualSPD struct {
	UUID        string          `json:"uuid"`
	Name        string          `json:"name"`
	Source      string          `json:"source"`
	Destination string          `json:"destination"`
	Direction   api.SelectedMap `json:"direction"`
	Enabled     bool            `json:"enabled"`
}

// CRUD operations

func (c *Controller) AddManualSPD(ctx context.Context, resource *ManualSPD) (string, error) {
	return api.Add(c.Client(), ctx, ManualSPDOpts, resource)
}

func (c *Controller) GetManualSPD(ctx context.Context, id string) (*ManualSPD, error) {
	return api.GetFilter(c.Client(), ctx, ManualSPDOpts, &ManualSPD{}, id)
}

func (c *Controller) GetManualSPDAll(ctx context.Context) ([]ManualSPD, error) {
	return api.GetAll(c.Client(), ctx, ManualSPDOpts, []ManualSPD{})
}

func (c *Controller) UpdateManualSPD(ctx context.Context, id string, resource *ManualSPD) error {
	return api.Update(c.Client(), ctx, ManualSPDOpts, resource, id)
}

func (c *Controller) DeleteManualSPD(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, ManualSPDOpts, id)
}
