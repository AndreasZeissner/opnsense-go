// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package ipsec

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var PreSharedKeyOpts = api.ReqOpts{
	AddEndpoint:         "/api/ipsec/pre_shared_keys/add",
	GetEndpoint:         "/api/ipsec/pre_shared_keys/get",
	UpdateEndpoint:      "/api/ipsec/pre_shared_keys/setItem",
	DeleteEndpoint:      "/api/ipsec/pre_shared_keys/del",
	ReconfigureEndpoint: ipsecReconfigureEndpoint,
	Monad:               "PreSharedKey",
}

// Data structs

type PreSharedKey struct {
	UUID   string `json:"uuid"`
	Name   string `json:"name"`
	Key    string `json:"key"`
	Remote string `json:"remote"`
}

// CRUD operations

func (c *Controller) AddPreSharedKey(ctx context.Context, resource *PreSharedKey) (string, error) {
	return api.Add(c.Client(), ctx, PreSharedKeyOpts, resource)
}

func (c *Controller) GetPreSharedKey(ctx context.Context, id string) (*PreSharedKey, error) {
	return api.GetFilter(c.Client(), ctx, PreSharedKeyOpts, &PreSharedKey{}, id)
}

func (c *Controller) GetPreSharedKeyAll(ctx context.Context) ([]PreSharedKey, error) {
	return api.GetAll(c.Client(), ctx, PreSharedKeyOpts, []PreSharedKey{})
}

func (c *Controller) UpdatePreSharedKey(ctx context.Context, id string, resource *PreSharedKey) error {
	return api.Update(c.Client(), ctx, PreSharedKeyOpts, resource, id)
}

func (c *Controller) DeletePreSharedKey(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, PreSharedKeyOpts, id)
}
